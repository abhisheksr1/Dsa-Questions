class Solution {
  public:
	void shortest_distance(vector<vector<int>>&g){
	    int V = g.size();
	    int i,j,k;
	    for (k = 0; k < V; k++) {
        // Pick all vertices as source one by one
        for (i = 0; i < V; i++) {
            // Pick all vertices as destination for the
            // above picked source
            for (j = 0; j < V; j++) {
                // If vertex k is on the shortest path from
                // i to j, then update the value of
                // dist[i][j]
                if(i==k || j==k || g[i][k]==-1 || g[k][j] == -1) continue;
	                g[i][j] = min(g[i][j]==-1 ? INT_MAX: g[i][j], g[i][k] + g[k][j]);
            }
        }
    }
	}
};
